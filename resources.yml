# Notes dynamodb table
notesTable: # here giveing a logical name
  Type: AWS::DynamoDB::Table
  Properties:
    TableName: notes-${self:provider.stage}
    BillingMode: PAY_PER_REQUEST
    KeySchema:
      - AttributeName: notesId
        KeyType: HASH
    AttributeDefinitions:
      - AttributeName: notesId
        AttributeType: S

# Cognito User Pool
cognitoUserPool:
  Type: AWS::Cognito::UserPool
  Properties:
    UserPoolName: notes-user-pool-${self:provider.stage}

# User Pool Web client
cognitoUserPoolWebClient:
  Type: AWS::Cognito::UserPoolClient
  Properties:
    ClientName: notes-web-client
    UserPoolId: !Ref cognitoUserPool
    AllowedOAuthFlowsUserPoolClient: true
    SupportedIdentityProviders:
      - COGNITO
    AllowedOAuthFlows:
      - implicit
    AllowedOAuthScopes:
      - email
      - phone
      - openid
    ExplicitAuthFlows:
      - ALLOW_CUSTOM_AUTH
      - ALLOW_ADMIN_USER_PASSWORD_AUTH
      - ALLOW_USER_SRP_AUTH
      - ALLOW_REFRESH_TOKEN_AUTH
    CallbackURLs:
      - https://localhost:3000

# User Pool domain
cognitoUserPoolDomain:
  Type: AWS::Cognito::UserPoolDomain
  Properties:
    UserPoolId: !Ref cognitoUserPool
    Domain: snknotesdomain-${self:provider.stage} # Replace with your desired domain name
